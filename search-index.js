var searchIndex = JSON.parse('{\
"rekee":{"doc":"Library providing track editor functions for the Rekee web…","i":[[5,"main","rekee","",null,[[],[["result",4],["jsvalue",3]]]],[5,"__wasm_bindgen_generated_main","","",null,[[]]],[0,"edition","","Set of tiles that belong to the same game edition (core…",null,null],[4,"Edition","rekee::edition","Rallyman game edition (core box or one of the expansions).",null,null],[13,"GtCoreBox","","Rallyman: GT core box",0,null],[13,"GtChampionship","","Championship expansion for Rallyman: GT",0,null],[13,"GtWorldTour","","World Tour expansion for Rallyman: GT",0,null],[13,"GtTeamChallenge","","Team Challenge expansion for Rallyman: GT",0,null],[13,"GtAdrenalinePack","","Adrenaline Pack expansion for Rallyman: GT",0,null],[13,"DirtCoreBox","","Rallyman: DIRT core box",0,null],[11,"all_tiles","","Returns all the tiles of the game joined into a sorted list.",0,[[],[["vec",3],["tileid",3]]]],[11,"tiles","","Returns the tiles of a specific game edition.",0,[[],[["vec",3],["tileid",3]]]],[11,"iter","","Iterator over all game editions.",0,[[],["iter",3]]],[0,"hexagon","rekee","Types and methods for working with a hexagon grid.",null,null],[3,"Coordinate","rekee::hexagon","Coordinate within a hexagon grid.",null,null],[3,"Point","","Position within a grid of rectangular pixels.",null,null],[12,"0","","",1,null],[12,"1","","",1,null],[3,"Rect","","Rectangle area within a grid of rectangular pixels. It…",null,null],[12,"left","","",2,null],[12,"top","","",2,null],[12,"width","","",2,null],[12,"height","","",2,null],[3,"Orientation","","Hexagon orientation coefficients.",null,null],[3,"Layout","","Coefficients for converting between hexagonal grid…",null,null],[4,"Direction","","Direction within a hexagon grid.",null,null],[13,"A","","Direction of the positive `q` axis.",3,null],[13,"B","","Direction of the positive `r` axis.",3,null],[13,"C","","Direction of the positive `s` axis.",3,null],[13,"D","","Direction of the negative `q` axis.",3,null],[13,"E","","Direction of the negative `r` axis.",3,null],[13,"F","","Direction of the negative `s` axis.",3,null],[11,"new","","Creates a new grid coordinate from positions on `q` and…",4,[[]]],[11,"q","","Coordinate position on `q` axis.",4,[[]]],[11,"r","","Coordinate position on `r` axis.",4,[[]]],[11,"s","","Coordinate position on `s` axis.",4,[[]]],[11,"neighbor","","Get adjacent grid coordinate based on the given direction.",4,[[]]],[11,"rotated_left","","Get coordinate rotated left (counter-clockwise) by 60°…",4,[[]]],[11,"rotated_right","","Get coordinate rotated right (clockwise) by 60° around the…",4,[[]]],[11,"to_pixel","","Convert this hexagon grid coordinate into x/y pixel…",4,[[["layout",3]],["point",3]]],[11,"from_pixel_rounded","","Convert x/y pixel positions back into a hexagon grid…",4,[[["layout",3],["point",3]]]],[11,"iter","","Iterator over all six directions.",3,[[],["iter",3]]],[11,"opposite","","Get opposite direction (point reflection).",3,[[]]],[11,"rotated_left","","Get direction rotated left (counter-clockwise).",3,[[]]],[11,"rotated_right","","Get direction rotated right (clockwise).",3,[[]]],[11,"to_angle","","Convert this hexagon grid direction into an angle in…",3,[[["layout",3]]]],[11,"x","","Position on the `x` axis.",1,[[]]],[11,"y","","Position on the `y` axis.",1,[[]]],[11,"new","","Creates a new rectangle from the `left`, `top`, `width`…",2,[[]]],[11,"right","","Right position of the rectangle.",2,[[]]],[11,"bottom","","Bottom position of the rectangle.",2,[[]]],[11,"center","","Center point of the rectangle.",2,[[],["point",3]]],[11,"union","","Calculates the union of two rectangles, the smallest…",2,[[["rect",3]],["rect",3]]],[11,"pointy","","Pointy topped orientation, hexagons are aligned in…",5,[[]]],[11,"flat","","Flat topped orientation, hexagons are aligned in vertical…",5,[[]]],[11,"new","","Creates a new grid layout, consisting of hexagon…",6,[[["orientation",3],["point",3]]]],[11,"orientation","","Returns a reference to the grid orientation parameters.",6,[[],["orientation",3]]],[11,"size","","Returns the hexagon size of this grid layout.",6,[[],["point",3]]],[11,"origin","","Returns the grid origin point.",6,[[],["point",3]]],[11,"is_pointy","","Returns whether the hexagon orientation is \\\"pointy top\\\" or…",6,[[]]],[11,"is_flat","","Returns whether the hexagon orientation is \\\"flat top\\\" or…",6,[[]]],[11,"hexagon_corners","","Calculates the corners of a hexagon with the given…",6,[[["coordinate",3]]]],[11,"hexagon_rect","","Calculates the rectangular box of a hexagon with the given…",6,[[["coordinate",3]],["rect",3]]],[0,"map","rekee","Map of tiles within a hexagon grid.",null,null],[3,"PlacedTile","rekee::map","Single tile that is part of the map. A placed tile…",null,null],[12,"pos","","",7,null],[12,"dir","","",7,null],[3,"Map","","Map for storing track tiles.",null,null],[11,"new","","Creates a new tile with identifier, coordinates, and…",7,[[["coordinate",3],["tileid",3],["direction",4]]]],[11,"id","","Tile identifier.",7,[[],["tileid",3]]],[11,"new","","Creates a new and empty map.",8,[[]]],[11,"title","","Map title.",8,[[]]],[11,"set_title","","Updates the map title.",8,[[]]],[11,"tiles","","List of all tiles placed on the map.",8,[[]]],[11,"active_pos","","Active position for the next tile `append` action. Returns…",8,[[],[["option",4],["coordinate",3]]]],[11,"set_active_pos","","Update position for the next tile `append` action.",8,[[["coordinate",3]]]],[11,"active_dir","","Active direction for the next tile `append` action.",8,[[],["direction",4]]],[11,"get","","Returns tile at the given map position, if existing.",8,[[["coordinate",3]],[["option",4],["placedtile",3]]]],[11,"insert","","Insert a new tile using the specified position and…",8,[[["coordinate",3],["tileid",3],["direction",4]]]],[11,"append","","Append a new tile to the map using the active position. In…",8,[[["option",4],["tileid",3],["option",4],["coordinate",3],["connectionhint",4]]]],[11,"remove","","Remove tile at the given position.",8,[[["coordinate",3]]]],[11,"align_center","","Re-align all tiles around the map center.",8,[[]]],[11,"rotate_left","","Rotate all tile positions to the left (counter-clockwise).",8,[[]]],[11,"rotate_right","","Rotate all tile positions to the right (clockwise).",8,[[]]],[0,"tile","rekee","Tile identifier and characteristics.",null,null],[3,"TileId","rekee::tile","Identifier of a game tile.",null,null],[3,"TileInfo","","Information about tile characteristics like graphical…",null,null],[4,"ConnectionHint","","Tile connection hint. Used to describe the orientation of…",null,null],[13,"Straight","","",9,null],[13,"Left","","",9,null],[13,"Right","","",9,null],[4,"ParseHintError","","",null,null],[13,"Unknown","","",10,null],[4,"Connection","","Internal tile connection information. Describes how a…",null,null],[13,"None","","",11,null],[13,"Straight","","",11,null],[13,"Left","","",11,null],[13,"Right","","",11,null],[13,"JunctionLeft","","",11,null],[13,"JunctionRight","","",11,null],[4,"Edge","","",null,null],[13,"None","","",12,null],[13,"Straight","","",12,null],[13,"SkewLeft","","",12,null],[13,"SkewRight","","",12,null],[11,"new","","Creates a new tile identifier from catalog number, tile…",13,[[]]],[11,"num","","Tile catalog number.",13,[[]]],[11,"side","","Tile side (1 => front / a, 2 => back / b).",13,[[]]],[11,"var","","Graphical tile variant.",13,[[]]],[11,"base","","Returns the \\\"base\\\" identifier of a game tile. This is the…",13,[[]]],[11,"lanes","","",12,[[]]],[11,"base_id","","Base identifier of the corresponding game tile.",14,[[],["tileid",3]]],[11,"full_id","","Full identifier of the corresponding game tile. If the…",14,[[],["tileid",3]]],[11,"iter","","Returns an interator over all tiles in the internal list.",14,[[],["iter",3]]],[11,"get","","Lookup tile information by tile identifier. The identifier…",14,[[["tileid",3]],["option",4]]],[11,"count","","Number of graphical variants that are available for a tile.",14,[[]]],[11,"connection","","",14,[[["direction",4]],["connection",4]]],[11,"connection_target","","",14,[[["direction",4]],[["option",4],["direction",4]]]],[11,"edge","","",14,[[["direction",4]],["edge",4]]],[14,"warn","rekee","",null,null],[14,"log","","",null,null],[14,"info","","",null,null],[14,"debug","","",null,null],[14,"tile","","Creates a new tile identifier.",null,null],[11,"from","rekee::edition","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","rekee::hexagon","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","rekee::map","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","rekee::tile","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","rekee::hexagon","",4,[[],["coordinate",3]]],[11,"from","","",3,[[],["direction",4]]],[11,"from","","",3,[[],["direction",4]]],[11,"from","","",3,[[],["direction",4]]],[11,"from","","",1,[[],["point",3]]],[11,"clone","","",4,[[],["coordinate",3]]],[11,"clone","","",3,[[],["direction",4]]],[11,"clone","","",1,[[],["point",3]]],[11,"clone","","",2,[[],["rect",3]]],[11,"clone","","",5,[[],["orientation",3]]],[11,"clone","","",6,[[],["layout",3]]],[11,"clone","rekee::map","",7,[[],["placedtile",3]]],[11,"clone","","",8,[[],["map",3]]],[11,"clone","rekee::tile","",13,[[],["tileid",3]]],[11,"clone","","",9,[[],["connectionhint",4]]],[11,"clone","","",11,[[],["connection",4]]],[11,"clone","","",12,[[],["edge",4]]],[11,"default","rekee::hexagon","",4,[[],["coordinate",3]]],[11,"default","","",1,[[],["point",3]]],[11,"default","","",2,[[],["rect",3]]],[11,"default","","",6,[[]]],[11,"default","rekee::map","",8,[[]]],[11,"default","rekee::tile","",13,[[],["tileid",3]]],[11,"default","","",11,[[]]],[11,"default","","",12,[[]]],[11,"default","","",14,[[],["tileinfo",3]]],[11,"cmp","rekee::hexagon","",4,[[["coordinate",3]],["ordering",4]]],[11,"cmp","rekee::tile","",13,[[["tileid",3]],["ordering",4]]],[11,"eq","rekee::hexagon","",4,[[["coordinate",3]]]],[11,"ne","","",4,[[["coordinate",3]]]],[11,"eq","","",3,[[["direction",4]]]],[11,"eq","","",1,[[["point",3]]]],[11,"ne","","",1,[[["point",3]]]],[11,"eq","","",2,[[["rect",3]]]],[11,"ne","","",2,[[["rect",3]]]],[11,"eq","rekee::map","",7,[[["placedtile",3]]]],[11,"eq","rekee::tile","",13,[[["tileid",3]]]],[11,"ne","","",13,[[["tileid",3]]]],[11,"eq","","",9,[[["connectionhint",4]]]],[11,"eq","","",11,[[["connection",4]]]],[11,"ne","","",11,[[["connection",4]]]],[11,"eq","","",11,[[["connectionhint",4]]]],[11,"eq","","",12,[[["edge",4]]]],[11,"ne","","",12,[[["edge",4]]]],[11,"partial_cmp","rekee::hexagon","",4,[[["coordinate",3]],[["ordering",4],["option",4]]]],[11,"lt","","",4,[[["coordinate",3]]]],[11,"le","","",4,[[["coordinate",3]]]],[11,"gt","","",4,[[["coordinate",3]]]],[11,"ge","","",4,[[["coordinate",3]]]],[11,"partial_cmp","rekee::tile","",13,[[["tileid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",13,[[["tileid",3]]]],[11,"le","","",13,[[["tileid",3]]]],[11,"gt","","",13,[[["tileid",3]]]],[11,"ge","","",13,[[["tileid",3]]]],[11,"fmt","rekee::hexagon","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::map","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::tile","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::hexagon","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::tile","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"sub","rekee::hexagon","",4,[[["coordinate",3]],["coordinate",3]]],[11,"sub","","",3,[[["direction",4]],["direction",4]]],[11,"sub","","",1,[[["point",3]],["point",3]]],[11,"add","","",4,[[["coordinate",3]],["coordinate",3]]],[11,"add","","",3,[[["direction",4]],["direction",4]]],[11,"add","","",1,[[["point",3]],["point",3]]],[11,"hash","rekee::tile","",13,[[]]],[11,"from_str","","",13,[[],["result",4]]],[11,"from_str","","",9,[[],["result",4]]],[11,"serialize","rekee::hexagon","",4,[[],["result",4]]],[11,"serialize","","",3,[[],["result",4]]],[11,"serialize","rekee::map","",7,[[],["result",4]]],[11,"serialize","","",8,[[],["result",4]]],[11,"serialize","rekee::tile","",13,[[],["result",4]]],[11,"deserialize","rekee::hexagon","",4,[[],["result",4]]],[11,"deserialize","","",3,[[],[["direction",4],["result",4]]]],[11,"deserialize","rekee::map","",7,[[],[["result",4],["placedtile",3]]]],[11,"deserialize","","",8,[[],["result",4]]],[11,"deserialize","rekee::tile","",13,[[],[["result",4],["tileid",3]]]]],"p":[[4,"Edition"],[3,"Point"],[3,"Rect"],[4,"Direction"],[3,"Coordinate"],[3,"Orientation"],[3,"Layout"],[3,"PlacedTile"],[3,"Map"],[4,"ConnectionHint"],[4,"ParseHintError"],[4,"Connection"],[4,"Edge"],[3,"TileId"],[3,"TileInfo"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);