var searchIndex = JSON.parse('{\
"rekee":{"doc":"Library providing track editor functions for the Rekee …","t":[5,14,0,0,0,14,14,5,0,0,14,14,13,13,13,13,13,13,4,13,13,13,13,13,13,4,4,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,3,13,4,13,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,4,4,13,3,3,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,4,3,3,8,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["__wasm_bindgen_generated_main","debug","edition","hexagon","import","info","log","main","map","tile","tile","warn","Dirt","Dirt110Percent","DirtClimb","DirtCopilotPack","DirtCoreBox","DirtRx","Edition","Gt","GtAdrenalinePack","GtChampionship","GtCoreBox","GtTeamChallenge","GtWorldTour","ParseEditionError","ParseSeriesError","Series","Unknown","Unknown","all_tiles","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","contains","deserialize","dirt_tiles","editions","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","gt_tiles","into","into","into","into","is_expansion","iter","iter","ne","ne","partial_cmp","partial_cmp","serialize","series","tiles","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","1","A","B","C","Coordinate","D","Direction","E","F","Layout","Orientation","Point","Rect","add","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom_right","center","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","deserialize","deserialize","eq","eq","eq","eq","flat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_pixel_rounded","height","hexagon_corners","hexagon_rect","into","into","into","into","into","into","is_flat","is_pointy","iter","left","ne","ne","ne","neighbor","new","new","new","opposite","orientation","origin","partial_cmp","pointy","q","r","right","rotated_left","rotated_left","rotated_right","rotated_right","s","serialize","serialize","size","sub","sub","sub","to_angle","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixel","to_string","to_string","top","top_left","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","union","width","with_padding","x","y","build_file_name","export_native","export_rgt","import_auto","import_native","import_rgt","Map","PlacedTile","active_dir","active_pos","align_center","append","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","deserialize","dir","eq","fmt","fmt","from","from","get","id","insert","into","into","new","new","pos","remove","rotate_left","rotate_right","serialize","serialize","set_active_pos","set_title","tiles","title","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Asphalt","Connection","ConnectionHint","Edge","Gravel","GroupByEdition","GroupBySurface","InvalidDangerLevel","Junction","Left","Left","None","None","None","ParseHintError","ParseTerrainError","Right","Right","SkewLeft","SkewRight","Snow","Straight","Straight","Straight","Terrain","TileId","TileInfo","TileList","Unknown","UnknownSurface","as_ref","base","base_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","connection","connection_target","count","danger_level","default","default","default","default","default","deserialize","deserialize","edge","eq","eq","eq","eq","eq","eq","eq","eq","eq_surface","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","full_id","get","group_by_edition","group_by_surface","hash","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","iter","lanes","ne","ne","ne","ne","ne","ne","new","next","next","num","partial_cmp","partial_cmp","serialize","serialize","series","side","surface","target","terrain","tiles","tiles","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","var"],"q":["rekee","","","","","","","","","","","","rekee::edition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee::hexagon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee::import","","","","","","rekee::map","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee::tiled":["","Prints a debug message to the log output.","Set of tiles that belong to the same game edition (core …","Types and methods for working with a hexagon grid.","Import and export of map data.","Prints an info message to the log output.","Prints a generic message to the log output.","","Map of tiles within a hexagon grid.","Tile identifier and characteristics.","Creates a new tile identifier.","Prints a warning message to the log output.","Rallyman: DIRT","110% expansion for Rallyman: DIRT","Climb expansion for Rallyman: DIRT","Copilot Pack expansion for Rallyman: DIRT","Rallyman: DIRT core box","RX expansion for Rallyman: DIRT","Rallyman game edition (core box or one of the expansions).","Rallyman: GT","Adrenaline Pack expansion for Rallyman: GT","Championship expansion for Rallyman: GT","Rallyman: GT core box","Team Challenge expansion for Rallyman: GT","World Tour expansion for Rallyman: GT","","","Rallyman game series (GT or DIRT).","","","Returns all the tiles of the game joined into a sorted …","","","","","","","","","","","","","","","Check whether a specific game edition contains the given …","","Returns tiles part of Rallyman: DIRT game editions joined …","Iterator over the editions of the game series.","","","","","","","","","","","","","","","","","","","","Returns tiles part of Rallyman: GT game editions joined …","","","","","Check whether the edition is a stand-alone game, or an …","Iterator over all game editions.","Iterator over all game series.","","","","","","Game series that the edition belongs to.","Returns the tiles of a specific game edition.","","","","","","","","","","","","","","","","","","","","","","Direction of the positive <code>q</code> axis.","Direction of the positive <code>r</code> axis.","Direction of the positive <code>s</code> axis.","Coordinate within a hexagon grid.","Direction of the negative <code>q</code> axis.","Direction within a hexagon grid.","Direction of the negative <code>r</code> axis.","Direction of the negative <code>s</code> axis.","Coefficients for converting between hexagonal grid …","Hexagon orientation coefficients.","Position within a grid of rectangular pixels.","Rectangle area within a grid of rectangular pixels. It …","","","","","","","","","","","","","","","","Bottom position of the rectangle.","Bottom-right corner of the rectangle.","Center point of the rectangle.","","","","","","","","","","","","","","","","","","","","","","","","Flat topped orientation, hexagons are aligned in vertical …","","","","","","","","","","","","","","","","","","","","Convert x/y pixel positions back into a hexagon grid …","","Calculates the corners of a hexagon with the given …","Calculates the rectangular box of a hexagon with the …","","","","","","","Returns whether the hexagon orientation is “flat top” …","Returns whether the hexagon orientation is “pointy top…","Iterator over all six directions.","","","","","Get adjacent grid coordinate based on the given direction.","Creates a new grid coordinate from positions on <code>q</code> and <code>r</code> …","Creates a new rectangle from the <code>left</code>, <code>top</code>, <code>width</code> and …","Creates a new grid layout, consisting of hexagon …","Get opposite direction (point reflection).","Returns a reference to the grid orientation parameters.","Returns the grid origin point.","","Pointy topped orientation, hexagons are aligned in …","Coordinate position on <code>q</code> axis.","Coordinate position on <code>r</code> axis.","Right position of the rectangle.","Get coordinate rotated left (counter-clockwise) by 60° …","Get direction rotated left (counter-clockwise).","Get coordinate rotated right (clockwise) by 60° around …","Get direction rotated right (clockwise).","Coordinate position on <code>s</code> axis.","","","Returns the hexagon size of this grid layout.","","","","Convert this hexagon grid direction into an angle in …","","","","","","","Convert this hexagon grid coordinate into x/y pixel …","","","","Top-left corner of the rectangle.","","","","","","","","","","","","","","","","","","","Calculates the union of two rectangles, the smallest …","","Creates a new rectangle from the existing one by adding a …","Position on the <code>x</code> axis.","Position on the <code>y</code> axis.","Helper function to generate a valid filename from a (map …","Export map data in native Rekee format.","Export map data in RGT format.","Import map data with format auto-detection.","Import map data in native Rekee format.","Import map data in RGT format.","Map for storing track tiles.","Single tile that is part of the map. A placed tile …","Active direction for the next tile <code>append</code> action.","Active position for the next tile <code>append</code> action. Returns …","Re-align all tiles around the map center.","Append a new tile to the map using the active position. …","","","","","","","","","","","","","","","","","","","Returns tile at the given map position, if existing.","Tile identifier.","Insert a new tile using the specified position and …","","","Creates a new tile with identifier, coordinates, and …","Creates a new and empty map.","","Remove tile at the given position.","Rotate all tile positions to the left (counter-clockwise).","Rotate all tile positions to the right (clockwise).","","","Update position for the next tile <code>append</code> action.","Updates the map title.","List of all tiles placed on the map.","Map title.","","","","","","","","","","Internal tile connection information. Describes how a …","Tile connection hint. Used to describe the orientation of …","External tile edge information. Describes how the track …","","An iterator that yields the editions that are necessary …","An iterator that yields the terrain surfaces that are …","","","","","","","","","","","","","","","","","","Tile terrain information. Describes the track surface of …","Identifier of a game tile.","Information about tile characteristics like graphical …","Utilitiy methods on any list of [<code>TileId</code>]s.","","","","Returns the “base” identifier of a game tile. This is …","Base identifier of the corresponding game tile.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connection information for one of the six directions of a …","Connection target direction for one of the six directions …","Number of graphical variants that are available for a …","Danger level of a tile.","","","","","","","","Edge informantion for one of the six directions of a tile.","","","","","","","","","Compares the surface of two tiles and ignores the danger …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Full identifier of the corresponding game tile. If the …","Lookup tile information by tile identifier. The …","Returns an iterator over the editions that are necessary …","Returns an iterator over the terrain surfaces that are …","","","","","","","","","","","","","","Returns an interator over all tiles in the internal list.","Lane count of the tile edge.","","","","","","","Creates a new tile identifier from catalog number, tile …","","","Tile catalog number.","","","","","Series information for a tile.","Tile side (1 => front / a, 2 => back / b).","Surface of a tile.","","Terrain information for a tile.","Returns the subset of tiles that are part of the current …","Returns the subset of tiles that belong to the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Graphical tile variant."],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,0,1,2,2,2,2,2,0,0,0,3,4,2,2,3,1,4,2,3,1,4,2,1,2,1,2,1,2,2,2,1,2,3,1,4,2,2,2,3,3,1,1,4,4,2,3,1,4,2,1,2,2,3,1,4,2,2,1,3,4,2,1,2,2,2,2,1,2,3,1,4,2,2,3,1,4,2,3,1,4,2,3,1,4,5,5,6,6,6,0,6,0,6,6,0,0,0,0,7,6,5,7,6,5,8,9,10,7,6,5,8,9,10,8,8,8,7,6,5,8,9,10,7,6,5,8,9,10,7,7,5,8,10,7,6,7,6,5,8,9,7,7,6,6,5,8,9,10,7,7,6,6,6,6,5,5,8,9,10,7,8,10,10,7,6,5,8,9,10,10,10,6,8,7,5,8,7,7,8,10,6,10,10,7,9,7,7,8,7,6,7,6,7,7,6,10,7,6,5,6,7,6,5,8,9,10,7,7,6,8,8,7,6,5,8,9,10,7,6,5,8,9,10,7,6,5,8,9,10,8,8,8,5,5,0,0,0,0,0,0,0,0,11,11,11,11,12,12,11,12,11,12,11,12,11,11,12,11,12,12,12,11,12,11,11,12,11,12,11,12,11,12,11,11,11,12,11,11,11,11,11,12,11,12,11,12,11,12,11,13,0,0,0,13,0,0,14,15,16,15,15,17,13,0,0,16,15,17,17,13,16,15,17,0,0,0,0,18,14,19,19,20,21,22,19,16,18,15,17,13,14,20,21,22,19,16,18,15,17,13,14,20,19,16,15,17,13,19,16,15,17,13,19,13,20,20,20,13,19,15,17,13,20,19,13,20,19,16,18,15,15,17,13,14,13,19,19,16,16,18,18,15,17,13,13,14,14,20,20,21,22,19,16,18,15,17,13,14,20,19,16,13,20,20,23,23,19,21,22,19,16,18,15,17,13,14,20,21,22,20,17,19,18,15,17,13,14,19,21,22,19,19,13,19,13,20,19,13,15,20,21,22,19,16,15,17,13,19,16,18,13,14,20,21,22,19,19,16,18,15,17,13,13,14,20,21,22,19,16,18,15,17,13,14,20,21,22,19,16,18,15,17,13,14,20,19],"f":[[[]],null,null,null,null,null,null,[[],[["jsvalue",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3],["tileid",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["edition",4]],[[],["series",4]],[[]],[[]],[[["edition",4]],["ordering",4]],[[["series",4]],["ordering",4]],[[["tileid",3]],["bool",15]],[[],["result",4]],[[],[["vec",3],["tileid",3]]],[[],[["edition",4],["iter",3]]],[[["edition",4]],["bool",15]],[[["parseeditionerror",4]],["bool",15]],[[["series",4]],["bool",15]],[[["parseserieserror",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],[["vec",3],["tileid",3]]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["iter",3]],[[],["iter",3]],[[["parseeditionerror",4]],["bool",15]],[[["parseserieserror",4]],["bool",15]],[[["edition",4]],[["option",4],["ordering",4]]],[[["series",4]],[["option",4],["ordering",4]]],[[],["result",4]],[[],["series",4]],[[],[["vec",3],["tileid",3]]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["coordinate",3]],["coordinate",3]],[[["direction",4]],["direction",4]],[[["point",3]],["point",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["f32",15]],[[],["point",3]],[[],["point",3]],[[],["coordinate",3]],[[],["direction",4]],[[],["point",3]],[[],["rect",3]],[[],["orientation",3]],[[],["layout",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["coordinate",3]],["ordering",4]],[[],["coordinate",3]],[[],["point",3]],[[],["rect",3]],[[]],[[],["result",4]],[[],["result",4]],[[["coordinate",3]],["bool",15]],[[["direction",4]],["bool",15]],[[["point",3]],["bool",15]],[[["rect",3]],["bool",15]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["coordinate",3]],[[]],[[]],[[["i32",15]],["direction",4]],[[["i8",15]],["direction",4]],[[["u8",15]],["direction",4]],[[]],[[],["point",3]],[[]],[[]],[[]],[[["point",3],["layout",3]]],null,[[["coordinate",3]]],[[["coordinate",3]],["rect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["iter",3]],null,[[["coordinate",3]],["bool",15]],[[["point",3]],["bool",15]],[[["rect",3]],["bool",15]],[[]],[[["i32",15]]],[[["f32",15]]],[[["point",3],["orientation",3]]],[[]],[[],["orientation",3]],[[],["point",3]],[[["coordinate",3]],[["option",4],["ordering",4]]],[[]],[[],["i32",15]],[[],["i32",15]],[[],["f32",15]],[[]],[[]],[[]],[[]],[[],["i32",15]],[[],["result",4]],[[],["result",4]],[[],["point",3]],[[["coordinate",3]],["coordinate",3]],[[["direction",4]],["direction",4]],[[["point",3]],["point",3]],[[["layout",3]],["f32",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[["layout",3]],["point",3]],[[],["string",3]],[[],["string",3]],null,[[],["point",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["rect",3]],["rect",3]],null,[[["f32",15]]],[[],["f32",15]],[[],["f32",15]],[[["str",15]],["string",3]],[[["map",3]],[["result",6],["string",3]]],[[["map",3]],[["result",6],["string",3]]],[[["str",15]],[["result",6],["map",3]]],[[["str",15]],[["result",6],["map",3]]],[[["str",15]],[["result",6],["map",3]]],null,null,[[],["direction",4]],[[],[["coordinate",3],["option",4]]],[[]],[[["option",4],["coordinate",3],["tileid",3],["option",4],["connectionhint",4]],["bool",15]],[[],["tileid",3]],[[]],[[]],[[]],[[]],[[],["placedtile",3]],[[],["map",3]],[[]],[[]],[[]],[[],[["result",4],["placedtile",3]]],[[],["result",4]],null,[[["placedtile",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["coordinate",3]],[["option",4],["placedtile",3]]],[[],["tileid",3]],[[["coordinate",3],["tileid",3],["direction",4]]],[[]],[[]],[[["coordinate",3],["tileid",3],["direction",4]]],[[]],null,[[["coordinate",3]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["coordinate",3]]],[[["str",15]]],[[]],[[],["str",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["tileid",3]],[[]],[[],["tileid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tileid",3]],[[],["connectionhint",4]],[[],["connection",4]],[[],["edge",4]],[[],["terrain",4]],[[]],[[]],[[]],[[]],[[]],[[["tileid",3]],["ordering",4]],[[["terrain",4]],["ordering",4]],[[["direction",4]],["connection",4]],[[["direction",4]],[["option",4],["direction",4]]],[[],["usize",15]],[[],["u8",15]],[[],["tileid",3]],[[]],[[]],[[]],[[],["tileinfo",3]],[[],["result",4]],[[],["result",4]],[[["direction",4]],["edge",4]],[[["tileid",3]],["bool",15]],[[["connectionhint",4]],["bool",15]],[[["parsehinterror",4]],["bool",15]],[[["connectionhint",4]],["bool",15]],[[["connection",4]],["bool",15]],[[["edge",4]],["bool",15]],[[["terrain",4]],["bool",15]],[[["parseterrainerror",4]],["bool",15]],[[["terrain",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["tileid",3]],[[["tileid",3]],["option",4]],[[],["groupbyedition",3]],[[],["groupbysurface",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["iter",3]],[[],["u8",15]],[[["tileid",3]],["bool",15]],[[["parsehinterror",4]],["bool",15]],[[["connection",4]],["bool",15]],[[["edge",4]],["bool",15]],[[["terrain",4]],["bool",15]],[[["parseterrainerror",4]],["bool",15]],[[["u8",15],["u16",15]]],[[],[["edition",4],["option",4]]],[[],[["terrain",4],["option",4]]],[[],["u16",15]],[[["tileid",3]],[["option",4],["ordering",4]]],[[["terrain",4]],[["option",4],["ordering",4]]],[[],["result",4]],[[],["result",4]],[[],["series",4]],[[],["u8",15]],[[],["terrain",4]],[[["direction",4]],[["option",4],["direction",4]]],[[],["terrain",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["u8",15]]],"p":[[4,"Series"],[4,"Edition"],[4,"ParseEditionError"],[4,"ParseSeriesError"],[3,"Point"],[4,"Direction"],[3,"Coordinate"],[3,"Rect"],[3,"Orientation"],[3,"Layout"],[3,"Map"],[3,"PlacedTile"],[4,"Terrain"],[4,"ParseTerrainError"],[4,"Connection"],[4,"ConnectionHint"],[4,"Edge"],[4,"ParseHintError"],[3,"TileId"],[3,"TileInfo"],[3,"GroupByEdition"],[3,"GroupBySurface"],[8,"TileList"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};