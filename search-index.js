var searchIndex = new Map(JSON.parse('[\
["rekee",{"t":"QCCCCQQCCQCQPPPPPPGPPPPPPGGGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFGPPPGPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHHHHPPPFPGPPFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNGPPPPNNHHHNNNNHHHNNNNNFFFKFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOMNNNNNNNNNNNNNNONNNNNNNNNNOONNNNNNNNNNONNNNNNOONNNNNNNNNNNNNNPPPPGGGFGFPFFFPPPPPPPPPPPPPPPPGGGGPPPPPPPPPGFFFKFPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNMNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPFPPPPPPGGKFPPNNNNNNNNNNNNNNNNNONNNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNNNNNNNNNNNNN","n":["debug","edition","export","hexagon","import","info","log","map","tile","tile","token","warn","Dirt","Dirt110Percent","DirtClimb","DirtCopilotPack","DirtCoreBox","DirtRx","Edition","Gt","GtAdrenalinePack","GtChampionship","GtCoreBox","GtTeamChallenge","GtWorldTour","ParseEditionError","ParseSeriesError","Series","Unknown","Unknown","all_tiles","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","contains","contains_base","contains_base_tile","contains_tile","contains_token","deserialize","deserialize","dirt_tiles","editions","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","from_str","gt_tiles","hash","into","into","into","into","is_expansion","iter","iter","partial_cmp","partial_cmp","serialize","serialize","series","tiles","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","ExportColorScheme","ExportScale","ExtraLarge","Large","Medium","ParseExportScaleError","Small","Unknown","author_height","background_color","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","deserialize","deserialize","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from_str","from_str","into","into","into","listing_background_color","listing_border_color","listing_tile_count_color","listing_tile_number_color","map_author_color","map_border_color","map_preposition_color","map_title_color","missing_image_color","new","partial_cmp","partial_cmp","serialize","serialize","tile_label_background_color","tile_label_color","tile_label_height","tile_pacenote_background_color","tile_pacenote_color","tile_size","title_height","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","util","tile_image_center","tile_image_size","token_image_center","token_image_size","A","B","C","Coordinate","D","Direction","E","F","FloatCoordinate","FloatDirection","Layout","Orientation","Point","Rect","add","add","add","add","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom_right","center","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","direction_from_angle","direction_to_angle","eq","eq","eq","eq","eq","eq","flat","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_angle","from_pixel","from_pixel_rounded","height","hexagon_corners","hexagon_rect","into","into","into","into","into","into","into","into","is_flat","is_pointy","iter","left","mul","neg","neg","neighbor","new","new","new","new","opposite","orientation","origin","partial_cmp","partial_cmp","pointy","q","q","r","r","right","rotate","rotated_left","rotated_left","rotated_right","rotated_right","s","s","serialize","serialize","serialize","serialize","size","sub","sub","sub","sub","sub","to_angle","to_angle","to_coordinate","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixel","to_pixel","to_string","to_string","to_string","to_string","to_string","top","top_left","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","width","with_orientation","with_origin","with_padding","with_size","x","y","ImportError","JsonError","UnknownTileId","UnknownTokenId","UnsupportedTokenId","borrow","borrow_mut","build_file_name","export_native","export_rgt","fmt","fmt","from","from","import_auto","import_native","import_rgt","into","to_string","try_from","try_into","type_id","EditionSummary","Map","PlacedTile","PlacedTileList","PlacedToken","active_dir","active_pos","add_tile_token","align_center","append","as_ref","as_ref","as_ref","author","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","danger_level","default","deserialize","deserialize","deserialize","dir","dir","edition","edition_count","edition_summary","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","get","has_flat_tokens","id","id","insert","insert_with_tokens","into","into","into","into","new","new","new","pacenotes","pos","pos","remove","rotate_left","rotate_right","serialize","serialize","serialize","set_active_pos","set_author","set_title","terrain","tile_count","tiles","title","to_owned","to_owned","to_owned","to_owned","token_count","tokens","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_tile_tokens","with_tokens","Asphalt","Chicane","Climb","Cloud","Connection","ConnectionHint","DangerLevel","DangerLevelSummary","Edge","EditionSummary","Gravel","GroupByDangerLevel","GroupByEdition","GroupByTerrain","Hazard","High","Jump","Junction","Left","Left","Limit","LimitHazard","Low","Medium","MudSpray","None","None","None","None","Oxygen","Pacenote","ParseDangerLevelError","ParseHintError","ParseTerrainError","Right","Right","Shortcut","SkewLeft","SkewRight","Snow","Straight","Straight","Straight","Terrain","TerrainSummary","TileId","TileInfo","TileList","TileSummary","Unknown","UnknownDangerLevel","UnknownTerrain","Water","as_ref","base","base_id","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","connection","connection_target","count","count","danger_level","danger_level","danger_level_summary","default","default","default","default","default","default","deserialize","deserialize","deserialize","detect_series","edge","edition","edition_count","edition_summary","editions","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","from_str","full_id","get","group_by_danger_level","group_by_edition","group_by_terrain","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","iter","lanes","new","next","next","next","num","pacenotes","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","series","side","target","terrain","terrain","terrain_summary","tile","tile_count","tile_count","tile_count","tile_summary","tiles","tiles","tiles","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","var","Chicane","ChicaneWithLimit","ClimbAscent","ClimbDescent","Cloud","EditionSummary","Finish","JokerEntrance","JokerExit","Jump","MudSpray","Oxygen","ParseTokenError","TokenId","TokenList","TokenSummary","UnknownName","Water","as_ref","base","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","count","default","deserialize","edition","edition","edition_summary","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_str","into","into","into","into","iter","partial_cmp","serialize","to_owned","to_owned","to_owned","to_string","to_string","token","token_count","token_summary","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","with_terrain","without_terrain"],"q":[[0,"rekee"],[12,"rekee::edition"],[109,"rekee::export"],[189,"rekee::export::util"],[193,"rekee::hexagon"],[403,"rekee::import"],[425,"rekee::map"],[525,"rekee::tile"],[863,"rekee::token"],[950,"alloc::vec"],[951,"core::cmp"],[952,"core::result"],[953,"serde::de"],[954,"core::slice::iter"],[955,"core::fmt"],[956,"core::hash"],[957,"core::option"],[958,"serde::ser"],[959,"alloc::string"],[960,"core::any"],[961,"core::convert"],[962,"serde_json::error"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,4,3,3,3,3,3,0,4,3,3,3,3,3,0,0,0,12,13,3,3,12,4,13,3,12,4,13,3,4,3,4,3,4,3,3,3,3,3,3,4,3,4,3,12,4,13,3,3,3,12,12,4,4,4,13,13,3,12,4,13,3,4,3,4,3,12,4,13,3,3,4,3,4,3,4,3,3,3,4,3,12,4,13,3,3,12,4,4,13,3,12,4,13,3,12,4,13,0,0,22,22,22,0,22,25,22,24,22,25,24,22,25,24,22,24,22,24,22,24,22,24,22,24,22,25,24,22,22,25,25,24,24,22,25,24,22,24,22,25,24,24,24,24,24,24,24,24,24,24,24,22,24,22,24,24,24,22,24,24,22,22,22,24,22,25,24,22,22,25,24,22,25,24,22,25,24,0,0,0,0,0,31,31,31,0,31,0,31,31,0,0,0,0,0,0,29,30,31,32,27,29,30,31,32,27,33,35,28,29,30,31,32,27,33,35,28,33,33,33,29,30,31,32,27,33,35,28,29,30,31,32,27,33,35,28,29,29,30,32,27,33,28,29,30,31,32,28,28,29,30,31,32,27,33,35,29,29,30,30,31,31,32,32,27,27,33,35,28,29,29,30,30,30,31,31,31,31,32,32,32,27,27,33,35,28,32,30,29,33,28,28,29,30,31,32,27,33,35,28,28,28,31,33,27,31,32,29,29,30,33,28,31,28,28,29,30,35,29,30,29,30,33,30,29,31,29,31,29,30,29,30,31,32,28,29,30,31,32,27,31,32,30,29,30,31,32,27,33,35,28,29,30,29,30,31,32,27,33,33,29,30,31,32,27,33,35,28,29,30,31,32,27,33,35,28,29,30,31,32,27,33,35,28,33,33,28,28,33,28,27,27,0,42,42,42,42,42,42,0,0,0,42,42,42,42,0,0,0,42,42,42,42,42,0,0,0,0,0,41,41,41,41,41,46,46,44,41,46,44,41,47,46,44,41,47,46,44,41,47,46,44,41,47,46,41,46,44,41,46,44,47,47,48,46,44,47,46,44,41,47,46,44,41,47,41,46,46,44,41,41,46,44,41,47,46,44,41,46,46,44,41,41,41,46,44,41,41,41,41,46,47,41,41,46,44,41,47,47,46,46,44,41,47,46,44,41,47,46,44,41,47,41,46,50,49,49,49,0,0,0,0,0,0,50,0,0,0,49,26,49,57,45,57,49,49,26,26,49,57,58,26,50,49,0,0,0,0,45,57,49,58,58,50,45,57,58,0,0,0,0,0,0,61,62,63,49,1,1,52,65,66,64,1,53,54,55,56,45,61,57,58,26,62,50,63,49,52,65,66,64,1,53,54,55,56,45,61,57,58,26,62,50,63,49,52,1,53,54,55,56,45,57,58,26,50,49,1,53,54,55,56,45,57,58,26,50,49,1,26,50,49,52,52,52,53,52,56,60,1,57,58,26,50,52,1,26,50,60,52,54,54,60,52,1,53,54,55,56,45,61,57,57,58,26,62,50,63,49,1,1,1,53,54,55,56,45,45,61,61,57,58,26,26,26,62,62,50,50,50,63,63,49,49,52,52,65,66,64,1,53,54,55,56,45,61,57,58,26,62,50,63,49,52,1,45,26,50,52,52,60,60,60,1,65,66,64,1,53,54,55,56,45,61,57,58,26,62,50,63,49,52,65,66,64,52,58,1,65,66,64,1,52,1,26,50,49,1,26,50,52,1,57,52,55,60,53,54,55,56,60,65,66,64,1,53,54,55,56,45,57,58,26,50,49,1,45,61,26,62,50,63,49,52,65,66,64,1,1,53,54,55,56,45,61,57,58,26,26,62,50,50,63,49,52,65,66,64,1,53,54,55,56,45,61,57,58,26,62,50,63,49,52,65,66,64,1,53,54,55,56,45,61,57,58,26,62,50,63,49,52,1,8,8,8,8,8,0,8,8,8,8,8,8,0,0,0,0,71,8,8,8,8,71,68,69,8,71,68,69,8,68,69,8,68,69,8,68,8,8,8,69,70,8,71,68,69,8,8,8,71,71,68,69,8,71,68,69,8,8,71,68,69,8,8,8,8,68,69,8,71,68,69,70,8,8,71,68,69,8,71,68,69,8,71,68,69,8,8],"f":"``````````````````````````````{{}{{d{b}}}}{ce{}{}}0000000{ff}{hh}{{ce}j{}{}}0{{ff}l}{{hh}l}{{fb}n}000{{fA`}n}{c{{Ab{f}}}Ad}{c{{Ab{h}}}Ad}:{h{{Af{f}}}}{{ff}n}{{AhAh}n}{{hh}n}{{AjAj}n}{{fAl}An}00{{AhAl}An}0{{hAl}An}00{{AjAl}An}0{cc{}}000{B`{{Ab{fc}}}{}}{B`{{Ab{hc}}}{}}{{}{{d{b}}}}{{hc}jBb}{ce{}{}}000{fn}{{}{{Af{f}}}}{{}{{Af{h}}}}{{ff}{{Bd{l}}}}{{hh}{{Bd{l}}}}{{fc}AbBf}{{hc}AbBf}{fh}{f{{d{b}}}}99{cBh{}}000>{c{{Ab{e}}}{}{}}0>000000{cBj{}}000````````{BlBn}{C`B`}>>>>>>{BlBl}{C`C`}{{ce}j{}{}}0{{BlBl}l}{{C`C`}l}{{}Bl}{{}C`}{c{{Ab{Bl}}}Ad}{c{{Ab{C`}}}Ad}{{BlBl}n}{{CbCb}n}{{C`C`}n}{{BlAl}An}0{{CbAl}An}0{{C`Al}An}0{cc{}}00{B`{{Ab{Blc}}}{}}{B`{{Ab{C`c}}}{}}{ce{}{}}00{C`B`}00000000{hC`}{{BlBl}{{Bd{l}}}}{{C`C`}{{Bd{l}}}}{{Blc}AbBf}{{C`c}AbBf}55{BlBn}6{{C`Cd}B`}{BlCf}299{cBh{}}00{c{{Ab{e}}}{}{}}=00000{cBj{}}00`{ChCf}0{{ChA`}Cf}0``````````````{{CjCj}Cj}{{ClCl}Cl}{{CnCn}Cn}{{D`D`}D`}{{CfCf}Cf}{ce{}{}}000000000000000{DbDd}{DbCf}0{CjCj}{ClCl}{CnCn}{D`D`}{CfCf}{DbDb}{DfDf}{ChCh}{{ce}j{}{}}0000000{{CjCj}l}{{}Cj}{{}Cl}{{}D`}{{}Cf}{{}Db}{{}Ch}{c{{Ab{Cj}}}Ad}{c{{Ab{Cl}}}Ad}{c{{Ab{Cn}}}Ad}{c{{Ab{D`}}}Ad}{{ChDd}D`}{{Chc}Dd{{Dh{D`}}}}{{CjCj}n}{{ClCl}n}{{CnCn}n}{{D`D`}n}{{CfCf}n}{{DbDb}n}{{}Df}{{CjAl}An}0{{ClAl}An}0{{CnAl}An}0{{D`Al}An}0{{CfAl}An}0{{DbAl}An}{{DfAl}An}{{ChAl}An}{{{Dj{BnBn}}}Cj}{cc{}}0{{{Dj{DdDd}}}Cl}{CjCl}2{DlCn}{DnCn}{BnCn}{DdD`}{CnD`}77{{{Dj{DdDd}}}Cf}8882{{ChCf}Cl}{{ChCf}Cj}`{{ChCj}{{E`{Cf}}}}{{ChCj}Db}{ce{}{}}0000000{Chn}0{{}{{Af{Cn}}}}`{{CfDd}Cf}{CnCn}{D`D`}{{Cjc}Cj{{Dh{Cn}}}}{{BnBn}Cj}{{DdDd}Cl}{{DdDdDdDd}Db}{{DfCfCf}Ch}6{ChDf}{ChCf}{{CjCj}{{Bd{l}}}}{{ClCl}{{Bd{l}}}}{{}Df}{CjBn}{ClDd}10{DbDd}{{Clc}Cl{{Dh{D`}}}}{CjCj}{CnCn}1054{{Cjc}AbBf}{{Clc}AbBf}{{Cnc}AbBf}{{D`c}AbBf}={{CjCj}Cj}{{ClCl}Cl}{{CnCn}Cn}{{D`D`}D`}{{CfCf}Cf}{CnDd}{D`Dd}{ClCj}{ce{}{}}0000000{{CjCh}Cf}{{ClCh}Cf}{cBh{}}0000`{DbCf}{c{{Ab{e}}}{}{}}000000000000000{cBj{}}0000000{{DbDb}Db}`{{ChDf}Ch}{{ChCf}Ch}{{DbDd}Db}1{CfDd}0`````;;{B`Bh}{Eb{{Ab{BhEd}}}}0{{EdAl}An}0{cc{}}{EfEd}{B`{{Ab{EbEd}}}}00{ce{}{}}?==<`````{EbCn}{Eb{{Bd{Cj}}}}{{EbCjEh}j}{Ebj}{{Ebb{Bd{Cj}}{Bd{Ej}}}n}{ElEl}{Elb}{EhA`}{EbB`}999999993{EhEh}{EbEb}{EnEn}{{ce}j{}{}}000{El{{Bd{Cd}}}}{{}Eb}{c{{Ab{El}}}Ad}{c{{Ab{Eh}}}Ad}{c{{Ab{Eb}}}Ad}````{F`{{d{En}}}}{{ElEl}n}{{EhEh}n}{{EnEn}n}{{ElAl}An}{{EhAl}An}{{EbAl}An}{{EnAl}An}{cc{}}000{{EbCj}{{Bd{El}}}}{Eln}{Elb}`{{EbbCjCn}j}{{EbbCjCn{d{Eh}}}j}{ce{}{}}000{{bCjCn}El}{{A`ClD`}Eh}{{}Eb}{El{{d{Fb}}}}``{{EbCj}j}{Ebj}0{{Elc}AbBf}{{Ehc}AbBf}{{Ebc}AbBf}4{{EbB`}j}0{El{{Bd{Fd}}}}`{Eb{{Ff{El}}}}{EbB`}====``{c{{Ab{e}}}{}{}}0000000{cBj{}}000{{EbCj{Ff{Eh}}}j}{{bCjCn{d{Eh}}}El}`````````````````````````````````````````````````````{bb}0{Fhb}{ce{}{}}000000000000000000000000000000000002{FjFj}{FlFl}{FnFn}{G`G`}{EjEj}{GbGb}{GdGd}{CdCd}{FdFd}{FbFb}{{ce}j{}{}}0000000000{{bb}l}{{CdCd}l}{{FdFd}l}{{FbFb}l}{{FhCn}Gb}{{FhCn}{{Bd{Cn}}}}{FhGf}`{FhCd}`{Gh{{d{G`}}}}{{}b}{{}Gb}{{}Gd}{{}Cd}{{}Fd}{{}Fh}{c{{Ab{b}}}Ad}{c{{Ab{Cd}}}Ad}{c{{Ab{Fd}}}Ad}{Gh{{Bd{h}}}}{{FhCn}Gd}``{Gh{{d{Fl}}}}{Fh{{d{f}}}}{{bb}n}{{FjFj}n}{{FlFl}n}{{FnFn}n}{{G`G`}n}{{EjEj}n}{{GjGj}n}{{GbGb}n}{{GbEj}n}{{GdGd}n}{{CdCd}n}{{GlGl}n}{{FdFd}n}{{GnGn}n}{{FbFb}n}{{bAl}An}00{{FjAl}An}{{FlAl}An}{{FnAl}An}{{G`Al}An}{{EjAl}An}0{{GjAl}An}0{{GbAl}An}{{GdAl}An}{{CdAl}An}00{{GlAl}An}0{{FdAl}An}00{{GnAl}An}0{{FbAl}An}0{{FhAl}An}0{cc{}}00000000000000000{B`{{Ab{bc}}}{}}{B`{{Ab{Ejc}}}{}}{B`{{Ab{Cdc}}}{}}{B`{{Ab{Fdc}}}{}}{Fhb}{b{{Bd{Fh}}}}{GhH`}{GhHb}{GhHd}{{bc}jBb}{ce{}{}}00000000000000000000{{}{{Af{Fh}}}}{GdDl}{{HfDlDl}b}{Hb{{Bd{f}}}}{Hd{{Bd{Fd}}}}{H`{{Bd{Cd}}}}{bHf}{Fh{{d{Fb}}}}{{bb}{{Bd{l}}}}{{CdCd}{{Bd{l}}}}{{FdFd}{{Bd{l}}}}{{FbFb}{{Bd{l}}}}{{bc}AbBf}{{Cdc}AbBf}{{Fdc}AbBf}{Fhh}{bDl}{{GbCn}{{Bd{Cn}}}}{FhFd}`{Gh{{d{Fn}}}}````{Gh{{d{Fj}}}}{Hb{{Ff{b}}}}{Hd{{Ff{b}}}}{H`{{Ff{b}}}}{ce{}{}}0000000000{cBh{}}00000000{c{{Ab{e}}}{}{}}00{B`{{Ab{bc}}}{}}1111111111{B`{{Ab{Cdc}}}{}}2{B`{{Ab{Fdc}}}{}}3333333333333333333333{cBj{}}00000000000000000>``````````````````{A`A`}0777777770{HhHh}{HjHj}{{ce}j{}{}}00{{A`A`}l}`{{}A`}{c{{Ab{A`}}}Ad}{A`f}`{Hl{{d{Hj}}}}{{A`A`}n}{{HnHn}n}{{HhHh}n}{{HjHj}n}{{A`Al}An}00{{HnAl}An}0{{HhAl}An}{{HjAl}An}{cc{}}000{B`{{Ab{A`c}}}{}}{ce{}{}}000{{}{{Af{A`}}}}{{A`A`}{{Bd{l}}}}{{A`c}AbBf}333{cBh{}}0``{Hl{{d{Hh}}}}6{c{{Ab{e}}}{}{}}0000000{cBj{}}000{{A`Fd}A`}{A`A`}","D":"BFd","p":[[5,"TileId",525],[5,"Vec",950],[6,"Edition",12],[6,"Series",12],[1,"unit"],[6,"Ordering",951],[1,"bool"],[6,"TokenId",863],[6,"Result",952],[10,"Deserializer",953],[5,"Iter",954],[6,"ParseEditionError",12],[6,"ParseSeriesError",12],[5,"Formatter",955],[8,"Result",955],[1,"str"],[10,"Hasher",956],[6,"Option",957],[10,"Serializer",958],[5,"String",959],[5,"TypeId",960],[6,"ExportScale",109],[1,"i32"],[5,"ExportColorScheme",109],[6,"ParseExportScaleError",109],[6,"DangerLevel",525],[5,"Point",193],[5,"Layout",193],[5,"Coordinate",193],[5,"FloatCoordinate",193],[6,"Direction",193],[5,"FloatDirection",193],[5,"Rect",193],[1,"f32"],[5,"Orientation",193],[10,"Into",961],[1,"tuple"],[1,"u8"],[1,"i8"],[1,"array"],[5,"Map",425],[6,"ImportError",403],[5,"Error",962],[5,"PlacedToken",425],[6,"ConnectionHint",525],[5,"PlacedTile",425],[5,"EditionSummary",425],[10,"PlacedTileList",425],[6,"Pacenote",525],[6,"Terrain",525],[1,"slice"],[5,"TileInfo",525],[5,"TileSummary",525],[5,"EditionSummary",525],[5,"TerrainSummary",525],[5,"DangerLevelSummary",525],[6,"Connection",525],[6,"Edge",525],[1,"usize"],[10,"TileList",525],[6,"ParseHintError",525],[6,"ParseDangerLevelError",525],[6,"ParseTerrainError",525],[5,"GroupByDangerLevel",525],[5,"GroupByEdition",525],[5,"GroupByTerrain",525],[1,"u16"],[5,"TokenSummary",863],[5,"EditionSummary",863],[10,"TokenList",863],[6,"ParseTokenError",863]],"r":[],"b":[[58,"impl-LowerHex-for-Edition"],[59,"impl-Display-for-Edition"],[60,"impl-Debug-for-Edition"],[61,"impl-Display-for-ParseEditionError"],[62,"impl-Debug-for-ParseEditionError"],[63,"impl-Display-for-Series"],[64,"impl-LowerHex-for-Series"],[65,"impl-Debug-for-Series"],[66,"impl-Debug-for-ParseSeriesError"],[67,"impl-Display-for-ParseSeriesError"],[138,"impl-Display-for-ExportScale"],[139,"impl-Debug-for-ExportScale"],[140,"impl-Display-for-ParseExportScaleError"],[141,"impl-Debug-for-ParseExportScaleError"],[142,"impl-Display-for-ExportColorScheme"],[143,"impl-Debug-for-ExportColorScheme"],[267,"impl-Display-for-Coordinate"],[268,"impl-Debug-for-Coordinate"],[269,"impl-Display-for-FloatCoordinate"],[270,"impl-Debug-for-FloatCoordinate"],[271,"impl-Display-for-Direction"],[272,"impl-Debug-for-Direction"],[273,"impl-Debug-for-FloatDirection"],[274,"impl-Display-for-FloatDirection"],[275,"impl-Debug-for-Point"],[276,"impl-Display-for-Point"],[283,"impl-From%3C(f32,+f32)%3E-for-FloatCoordinate"],[284,"impl-From%3CCoordinate%3E-for-FloatCoordinate"],[286,"impl-From%3Cu8%3E-for-Direction"],[287,"impl-From%3Ci8%3E-for-Direction"],[288,"impl-From%3Ci32%3E-for-Direction"],[289,"impl-From%3Cf32%3E-for-FloatDirection"],[290,"impl-From%3CDirection%3E-for-FloatDirection"],[413,"impl-Debug-for-ImportError"],[414,"impl-Display-for-ImportError"],[435,"impl-AsRef%3CPlacedTile%3E-for-PlacedTile"],[436,"impl-AsRef%3CTileId%3E-for-PlacedTile"],[672,"impl-PartialEq-for-Connection"],[673,"impl-PartialEq%3CConnectionHint%3E-for-Connection"],[680,"impl-Debug-for-TileId"],[681,"impl-LowerHex-for-TileId"],[682,"impl-Display-for-TileId"],[687,"impl-Debug-for-ConnectionHint"],[688,"impl-Display-for-ConnectionHint"],[689,"impl-Debug-for-ParseHintError"],[690,"impl-Display-for-ParseHintError"],[693,"impl-LowerHex-for-DangerLevel"],[694,"impl-Debug-for-DangerLevel"],[695,"impl-Display-for-DangerLevel"],[696,"impl-Debug-for-ParseDangerLevelError"],[697,"impl-Display-for-ParseDangerLevelError"],[698,"impl-Debug-for-Terrain"],[699,"impl-LowerHex-for-Terrain"],[700,"impl-Display-for-Terrain"],[701,"impl-Debug-for-ParseTerrainError"],[702,"impl-Display-for-ParseTerrainError"],[703,"impl-Debug-for-Pacenote"],[704,"impl-Display-for-Pacenote"],[705,"impl-Display-for-TileInfo"],[706,"impl-Debug-for-TileInfo"],[908,"impl-Display-for-TokenId"],[909,"impl-LowerHex-for-TokenId"],[910,"impl-Debug-for-TokenId"],[911,"impl-Display-for-ParseTokenError"],[912,"impl-Debug-for-ParseTokenError"]],"c":"OjAAAAEAAAAAAAQAEAAAAC4ALwA1AEsAtgM=","e":"OzAAAAEAAIQCSwAaAAEAHQABACAADwAzAAEANwANAEkAAQBMAAAAVAADAFoANgCUAAEAmQAoANAAFADoABoABQEFAAwBDQAcAQEAHwEEACYBAAAtAQAAOwEDAEcBAQBLAQAATQEAAFUBBABbAQQAYwEHAG0BBQB0ARcAjQEAAJQBBgCeAQEAoQEAAKYBAwCtAQEAtAECALgBDwDJAQcA0gEGAOABAADrAQEA8AECAPcBAAD6AREAHwICACcCAQAsAgUAMwIBADYCAgA/AgIAQwIAAEYCPQCHAgAAiQIAAIsCCACWAgEAmgIpANYCAwDfAgAA8gICAPgCAgD9AgYABgMAAAgDAAAKAwMAEgNMAGwDAABwAwAAcgMAAHQDEQCHAwAAiQMKAJgDAACeAwgAqAMMALYDAAA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
