var searchIndex = JSON.parse('{\
"rekee":{"doc":"Library providing track editor functions for the Rekee …","i":[[0,"edition","rekee","Set of tiles that belong to the same game edition (core …",null,null],[4,"Edition","rekee::edition","Rallyman game edition (core box or one of the expansions).",null,null],[13,"GtCoreBox","","Rallyman: GT core box",0,null],[13,"GtChampionship","","Championship expansion for Rallyman: GT",0,null],[13,"GtWorldTour","","World Tour expansion for Rallyman: GT",0,null],[13,"GtTeamChallenge","","Team Challenge expansion for Rallyman: GT",0,null],[13,"GtAdrenalinePack","","Adrenaline Pack expansion for Rallyman: GT",0,null],[13,"DirtCoreBox","","Rallyman: DIRT core box",0,null],[13,"Dirt110Percent","","110% expansion for Rallyman: DIRT",0,null],[13,"DirtRx","","RX expansion for Rallyman: DIRT",0,null],[13,"DirtClimb","","Climb expansion for Rallyman: DIRT",0,null],[13,"DirtCopilotPack","","Copilot Pack expansion for Rallyman: DIRT",0,null],[11,"all_tiles","","Returns all the tiles of the game joined into a sorted …",0,[[],[["tileid",3],["vec",3]]]],[11,"gt_tiles","","Returns tiles part of Rallyman: GT game editions joined …",0,[[],[["tileid",3],["vec",3]]]],[11,"dirt_tiles","","Returns tiles part of Rallyman: DIRT game editions joined …",0,[[],[["tileid",3],["vec",3]]]],[11,"tiles","","Returns the tiles of a specific game edition.",0,[[],[["tileid",3],["vec",3]]]],[11,"contains","","Check whether a specific game edition contains the given …",0,[[["tileid",3]],["bool",15]]],[11,"is_expansion","","Check whether the edition is a stand-alone game, or an …",0,[[],["bool",15]]],[11,"series","","Game series that the edition belongs to.",0,[[],["series",4]]],[11,"iter","","Iterator over all game editions.",0,[[],["iter",3]]],[4,"ParseEditionError","","",null,null],[13,"Unknown","","",1,null],[4,"Series","","Rallyman game series (GT or DIRT).",null,null],[13,"Gt","","Rallyman: GT",2,null],[13,"Dirt","","Rallyman: DIRT",2,null],[11,"editions","","Iterator over the editions of the game series.",2,[[],[["edition",4],["iter",3]]]],[11,"iter","","Iterator over all game series.",2,[[],["iter",3]]],[4,"ParseSeriesError","","",null,null],[13,"Unknown","","",3,null],[0,"hexagon","rekee","Types and methods for working with a hexagon grid.",null,null],[3,"Coordinate","rekee::hexagon","Coordinate within a hexagon grid.",null,null],[11,"new","","Creates a new grid coordinate from positions on <code>q</code> and <code>r</code> …",4,[[["i32",15]]]],[11,"q","","Coordinate position on <code>q</code> axis.",4,[[],["i32",15]]],[11,"r","","Coordinate position on <code>r</code> axis.",4,[[],["i32",15]]],[11,"s","","Coordinate position on <code>s</code> axis.",4,[[],["i32",15]]],[11,"neighbor","","Get adjacent grid coordinate based on the given direction.",4,[[]]],[11,"rotated_left","","Get coordinate rotated left (counter-clockwise) by 60° …",4,[[]]],[11,"rotated_right","","Get coordinate rotated right (clockwise) by 60° around …",4,[[]]],[11,"to_pixel","","Convert this hexagon grid coordinate into x/y pixel …",4,[[["layout",3]],["point",3]]],[11,"from_pixel_rounded","","Convert x/y pixel positions back into a hexagon grid …",4,[[["layout",3],["point",3]]]],[4,"Direction","","Direction within a hexagon grid.",null,null],[13,"A","","Direction of the positive <code>q</code> axis.",5,null],[13,"B","","Direction of the positive <code>r</code> axis.",5,null],[13,"C","","Direction of the positive <code>s</code> axis.",5,null],[13,"D","","Direction of the negative <code>q</code> axis.",5,null],[13,"E","","Direction of the negative <code>r</code> axis.",5,null],[13,"F","","Direction of the negative <code>s</code> axis.",5,null],[11,"iter","","Iterator over all six directions.",5,[[],["iter",3]]],[11,"opposite","","Get opposite direction (point reflection).",5,[[]]],[11,"rotated_left","","Get direction rotated left (counter-clockwise).",5,[[]]],[11,"rotated_right","","Get direction rotated right (clockwise).",5,[[]]],[11,"to_angle","","Convert this hexagon grid direction into an angle in …",5,[[["layout",3]],["f32",15]]],[3,"Point","","Position within a grid of rectangular pixels.",null,null],[12,"0","","",6,null],[12,"1","","",6,null],[11,"x","","Position on the <code>x</code> axis.",6,[[],["f32",15]]],[11,"y","","Position on the <code>y</code> axis.",6,[[],["f32",15]]],[3,"Rect","","Rectangle area within a grid of rectangular pixels. It …",null,null],[12,"left","","",7,null],[12,"top","","",7,null],[12,"width","","",7,null],[12,"height","","",7,null],[11,"new","","Creates a new rectangle from the <code>left</code>, <code>top</code>, <code>width</code> and …",7,[[["f32",15]]]],[11,"right","","Right position of the rectangle.",7,[[],["f32",15]]],[11,"bottom","","Bottom position of the rectangle.",7,[[],["f32",15]]],[11,"center","","Center point of the rectangle.",7,[[],["point",3]]],[11,"union","","Calculates the union of two rectangles, the smallest …",7,[[["rect",3]],["rect",3]]],[3,"Orientation","","Hexagon orientation coefficients.",null,null],[11,"pointy","","Pointy topped orientation, hexagons are aligned in …",8,[[]]],[11,"flat","","Flat topped orientation, hexagons are aligned in vertical …",8,[[]]],[3,"Layout","","Coefficients for converting between hexagonal grid …",null,null],[11,"new","","Creates a new grid layout, consisting of hexagon …",9,[[["point",3],["orientation",3]]]],[11,"orientation","","Returns a reference to the grid orientation parameters.",9,[[],["orientation",3]]],[11,"size","","Returns the hexagon size of this grid layout.",9,[[],["point",3]]],[11,"origin","","Returns the grid origin point.",9,[[],["point",3]]],[11,"is_pointy","","Returns whether the hexagon orientation is \\\"pointy top\\\" …",9,[[],["bool",15]]],[11,"is_flat","","Returns whether the hexagon orientation is \\\"flat top\\\" or …",9,[[],["bool",15]]],[11,"hexagon_corners","","Calculates the corners of a hexagon with the given …",9,[[["coordinate",3]]]],[11,"hexagon_rect","","Calculates the rectangular box of a hexagon with the …",9,[[["coordinate",3]],["rect",3]]],[0,"import","rekee","Import and export of map data.",null,null],[5,"import_native","rekee::import","Import map data in native Rekee format.",null,[[["str",15]],[["map",3],["result",6]]]],[5,"export_native","","Export map data in native Rekee format.",null,[[["map",3]],[["result",6],["string",3]]]],[5,"import_rgt","","Import map data in RGT format.",null,[[["str",15]],[["map",3],["result",6]]]],[5,"export_rgt","","Export map data in RGT format.",null,[[["map",3]],[["result",6],["string",3]]]],[5,"import_auto","","Import map data with format auto-detection.",null,[[["str",15]],[["map",3],["result",6]]]],[5,"build_file_name","","Helper function to generate a valid filename from a (map …",null,[[["str",15]],["string",3]]],[0,"map","rekee","Map of tiles within a hexagon grid.",null,null],[3,"PlacedTile","rekee::map","Single tile that is part of the map. A placed tile …",null,null],[12,"pos","","",10,null],[12,"dir","","",10,null],[11,"new","","Creates a new tile with identifier, coordinates, and …",10,[[["direction",4],["coordinate",3],["tileid",3]]]],[11,"id","","Tile identifier.",10,[[],["tileid",3]]],[3,"Map","","Map for storing track tiles.",null,null],[11,"new","","Creates a new and empty map.",11,[[]]],[11,"title","","Map title.",11,[[],["str",15]]],[11,"set_title","","Updates the map title.",11,[[["str",15]]]],[11,"tiles","","List of all tiles placed on the map.",11,[[]]],[11,"active_pos","","Active position for the next tile <code>append</code> action. Returns …",11,[[],[["coordinate",3],["option",4]]]],[11,"set_active_pos","","Update position for the next tile <code>append</code> action.",11,[[["coordinate",3]]]],[11,"active_dir","","Active direction for the next tile <code>append</code> action.",11,[[],["direction",4]]],[11,"get","","Returns tile at the given map position, if existing.",11,[[["coordinate",3]],[["option",4],["placedtile",3]]]],[11,"insert","","Insert a new tile using the specified position and …",11,[[["direction",4],["coordinate",3],["tileid",3]]]],[11,"append","","Append a new tile to the map using the active position. …",11,[[["coordinate",3],["option",4],["connectionhint",4],["option",4],["tileid",3]],["bool",15]]],[11,"remove","","Remove tile at the given position.",11,[[["coordinate",3]]]],[11,"align_center","","Re-align all tiles around the map center.",11,[[]]],[11,"rotate_left","","Rotate all tile positions to the left (counter-clockwise).",11,[[]]],[11,"rotate_right","","Rotate all tile positions to the right (clockwise).",11,[[]]],[0,"tile","rekee","Tile identifier and characteristics.",null,null],[3,"TileId","rekee::tile","Identifier of a game tile.",null,null],[11,"new","","Creates a new tile identifier from catalog number, tile …",12,[[["u16",15],["u8",15]]]],[11,"num","","Tile catalog number.",12,[[],["u16",15]]],[11,"side","","Tile side (1 => front / a, 2 => back / b).",12,[[],["u8",15]]],[11,"var","","Graphical tile variant.",12,[[],["u8",15]]],[11,"base","","Returns the \\\"base\\\" identifier of a game tile. This is the …",12,[[]]],[4,"ConnectionHint","","Tile connection hint. Used to describe the orientation of …",null,null],[13,"Straight","","",13,null],[13,"Left","","",13,null],[13,"Right","","",13,null],[4,"ParseHintError","","",null,null],[13,"Unknown","","",14,null],[4,"Connection","","Internal tile connection information. Describes how a …",null,null],[13,"None","","",15,null],[13,"Straight","","",15,null],[13,"Left","","",15,null],[13,"Right","","",15,null],[13,"Junction","","",15,null],[11,"target","","",15,[[["direction",4]],[["direction",4],["option",4]]]],[4,"Edge","","External tile edge information. Describes how the track …",null,null],[13,"None","","",16,null],[13,"Straight","","",16,null],[13,"SkewLeft","","",16,null],[13,"SkewRight","","",16,null],[11,"lanes","","Lane count of the tile edge.",16,[[],["u8",15]]],[4,"Terrain","","Tile terrain information. Describes the track surface of …",null,null],[13,"None","","",17,null],[13,"Asphalt","","",17,null],[13,"Gravel","","",17,null],[13,"Snow","","",17,null],[11,"danger_level","","Danger level of a tile.",17,[[],["u8",15]]],[11,"surface","","Surface of a tile.",17,[[],["terrain",4]]],[11,"eq_surface","","Compares the surface of two tiles and ignores the danger …",17,[[["terrain",4]],["bool",15]]],[4,"ParseTerrainError","","",null,null],[13,"UnknownSurface","","",18,null],[13,"InvalidDangerLevel","","",18,null],[3,"TileInfo","","Information about tile characteristics like graphical …",null,null],[11,"base_id","","Base identifier of the corresponding game tile.",19,[[],["tileid",3]]],[11,"full_id","","Full identifier of the corresponding game tile. If the …",19,[[],["tileid",3]]],[11,"iter","","Returns an interator over all tiles in the internal list.",19,[[],["iter",3]]],[11,"get","","Lookup tile information by tile identifier. The …",19,[[["tileid",3]],["option",4]]],[11,"count","","Number of graphical variants that are available for a …",19,[[],["usize",15]]],[11,"terrain","","Terrain information for a tile.",19,[[],["terrain",4]]],[11,"connection","","Connection information for one of the six directions of a …",19,[[["direction",4]],["connection",4]]],[11,"connection_target","","Connection target direction for one of the six directions …",19,[[["direction",4]],[["direction",4],["option",4]]]],[11,"edge","","Edge informantion for one of the six directions of a tile.",19,[[["direction",4]],["edge",4]]],[11,"series","","Series information for a tile.",19,[[],["series",4]]],[5,"main","rekee","",null,[[],[["result",4],["jsvalue",3]]]],[5,"__wasm_bindgen_generated_main","","",null,[[]]],[14,"warn","","Prints a warning message to the log output.",null,null],[14,"log","","Prints a generic message to the log output.",null,null],[14,"info","","Prints an info message to the log output.",null,null],[14,"debug","","Prints a debug message to the log output.",null,null],[14,"tile","","Creates a new tile identifier.",null,null],[11,"from","rekee::edition","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","rekee::hexagon","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","rekee::map","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","rekee::tile","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_string","","",14,[[],["string",3]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","rekee::hexagon","",4,[[],["coordinate",3]]],[11,"from","","",5,[[["u8",15]],["direction",4]]],[11,"from","","",5,[[["i8",15]],["direction",4]]],[11,"from","","",5,[[["i32",15]],["direction",4]]],[11,"from","","",6,[[],["point",3]]],[11,"clone","rekee::edition","",0,[[],["edition",4]]],[11,"clone","","",2,[[],["series",4]]],[11,"clone","rekee::hexagon","",4,[[],["coordinate",3]]],[11,"clone","","",5,[[],["direction",4]]],[11,"clone","","",6,[[],["point",3]]],[11,"clone","","",7,[[],["rect",3]]],[11,"clone","","",8,[[],["orientation",3]]],[11,"clone","","",9,[[],["layout",3]]],[11,"clone","rekee::map","",10,[[],["placedtile",3]]],[11,"clone","","",11,[[],["map",3]]],[11,"clone","rekee::tile","",12,[[],["tileid",3]]],[11,"clone","","",13,[[],["connectionhint",4]]],[11,"clone","","",15,[[],["connection",4]]],[11,"clone","","",16,[[],["edge",4]]],[11,"clone","","",17,[[],["terrain",4]]],[11,"default","rekee::hexagon","",4,[[],["coordinate",3]]],[11,"default","","",6,[[],["point",3]]],[11,"default","","",7,[[],["rect",3]]],[11,"default","","",9,[[]]],[11,"default","rekee::map","",11,[[]]],[11,"default","rekee::tile","",12,[[],["tileid",3]]],[11,"default","","",15,[[]]],[11,"default","","",16,[[]]],[11,"default","","",17,[[]]],[11,"default","","",19,[[],["tileinfo",3]]],[11,"cmp","rekee::edition","",0,[[["edition",4]],["ordering",4]]],[11,"cmp","","",2,[[["series",4]],["ordering",4]]],[11,"cmp","rekee::hexagon","",4,[[["coordinate",3]],["ordering",4]]],[11,"cmp","rekee::tile","",12,[[["tileid",3]],["ordering",4]]],[11,"eq","rekee::edition","",0,[[["edition",4]],["bool",15]]],[11,"eq","","",1,[[["parseeditionerror",4]],["bool",15]]],[11,"ne","","",1,[[["parseeditionerror",4]],["bool",15]]],[11,"eq","","",2,[[["series",4]],["bool",15]]],[11,"eq","","",3,[[["parseserieserror",4]],["bool",15]]],[11,"ne","","",3,[[["parseserieserror",4]],["bool",15]]],[11,"eq","rekee::hexagon","",4,[[["coordinate",3]],["bool",15]]],[11,"ne","","",4,[[["coordinate",3]],["bool",15]]],[11,"eq","","",5,[[["direction",4]],["bool",15]]],[11,"eq","","",6,[[["point",3]],["bool",15]]],[11,"ne","","",6,[[["point",3]],["bool",15]]],[11,"eq","","",7,[[["rect",3]],["bool",15]]],[11,"ne","","",7,[[["rect",3]],["bool",15]]],[11,"eq","rekee::map","",10,[[["placedtile",3]],["bool",15]]],[11,"eq","rekee::tile","",12,[[["tileid",3]],["bool",15]]],[11,"ne","","",12,[[["tileid",3]],["bool",15]]],[11,"eq","","",13,[[["connectionhint",4]],["bool",15]]],[11,"eq","","",14,[[["parsehinterror",4]],["bool",15]]],[11,"ne","","",14,[[["parsehinterror",4]],["bool",15]]],[11,"eq","","",15,[[["connection",4]],["bool",15]]],[11,"ne","","",15,[[["connection",4]],["bool",15]]],[11,"eq","","",15,[[["connectionhint",4]],["bool",15]]],[11,"eq","","",16,[[["edge",4]],["bool",15]]],[11,"ne","","",16,[[["edge",4]],["bool",15]]],[11,"eq","","",17,[[["terrain",4]],["bool",15]]],[11,"ne","","",17,[[["terrain",4]],["bool",15]]],[11,"eq","","",18,[[["parseterrainerror",4]],["bool",15]]],[11,"ne","","",18,[[["parseterrainerror",4]],["bool",15]]],[11,"partial_cmp","rekee::edition","",0,[[["edition",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",2,[[["series",4]],[["option",4],["ordering",4]]]],[11,"partial_cmp","rekee::hexagon","",4,[[["coordinate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",4,[[["coordinate",3]],["bool",15]]],[11,"le","","",4,[[["coordinate",3]],["bool",15]]],[11,"gt","","",4,[[["coordinate",3]],["bool",15]]],[11,"ge","","",4,[[["coordinate",3]],["bool",15]]],[11,"partial_cmp","rekee::tile","",12,[[["tileid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",12,[[["tileid",3]],["bool",15]]],[11,"le","","",12,[[["tileid",3]],["bool",15]]],[11,"gt","","",12,[[["tileid",3]],["bool",15]]],[11,"ge","","",12,[[["tileid",3]],["bool",15]]],[11,"fmt","rekee::edition","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::hexagon","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::map","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::tile","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::edition","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::hexagon","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","rekee::tile","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"sub","rekee::hexagon","",4,[[["coordinate",3]],["coordinate",3]]],[11,"sub","","",5,[[["direction",4]],["direction",4]]],[11,"sub","","",6,[[["point",3]],["point",3]]],[11,"add","","",4,[[["coordinate",3]],["coordinate",3]]],[11,"add","","",5,[[["direction",4]],["direction",4]]],[11,"add","","",6,[[["point",3]],["point",3]]],[11,"hash","rekee::tile","",12,[[]]],[11,"try_from","rekee::edition","",0,[[["str",15]],["result",4]]],[11,"try_from","rekee::tile","",12,[[["str",15]],["result",4]]],[11,"try_from","","",17,[[["str",15]],["result",4]]],[11,"from_str","rekee::edition","",0,[[["str",15]],["result",4]]],[11,"from_str","","",2,[[["str",15]],["result",4]]],[11,"from_str","rekee::tile","",12,[[["str",15]],["result",4]]],[11,"from_str","","",13,[[["str",15]],["result",4]]],[11,"from_str","","",17,[[["str",15]],["result",4]]],[11,"serialize","rekee::edition","",0,[[],["result",4]]],[11,"serialize","rekee::hexagon","",4,[[],["result",4]]],[11,"serialize","","",5,[[],["result",4]]],[11,"serialize","rekee::map","",10,[[],["result",4]]],[11,"serialize","","",11,[[],["result",4]]],[11,"serialize","rekee::tile","",12,[[],["result",4]]],[11,"serialize","","",17,[[],["result",4]]],[11,"deserialize","rekee::edition","",0,[[],["result",4]]],[11,"deserialize","rekee::hexagon","",4,[[],["result",4]]],[11,"deserialize","","",5,[[],["result",4]]],[11,"deserialize","rekee::map","",10,[[],[["placedtile",3],["result",4]]]],[11,"deserialize","","",11,[[],["result",4]]],[11,"deserialize","rekee::tile","",12,[[],["result",4]]],[11,"deserialize","","",17,[[],["result",4]]]],"p":[[4,"Edition"],[4,"ParseEditionError"],[4,"Series"],[4,"ParseSeriesError"],[3,"Coordinate"],[4,"Direction"],[3,"Point"],[3,"Rect"],[3,"Orientation"],[3,"Layout"],[3,"PlacedTile"],[3,"Map"],[3,"TileId"],[4,"ConnectionHint"],[4,"ParseHintError"],[4,"Connection"],[4,"Edge"],[4,"Terrain"],[4,"ParseTerrainError"],[3,"TileInfo"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);