var searchIndex = JSON.parse('{\
"rekee":{"doc":"Library providing track editor functions for the Rekee …","t":[0,4,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,4,13,4,13,13,11,11,4,13,0,3,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,11,11,11,11,11,3,12,12,11,11,3,12,12,12,12,11,11,11,11,11,3,11,11,3,11,11,11,11,11,11,11,11,0,5,5,5,5,5,5,0,3,12,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,3,11,11,11,11,11,4,13,13,13,4,13,4,13,13,13,13,13,11,4,13,13,13,13,11,4,13,13,13,13,11,11,11,4,13,13,3,11,11,11,11,11,11,11,11,11,11,5,5,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["edition","Edition","GtCoreBox","GtChampionship","GtWorldTour","GtTeamChallenge","GtAdrenalinePack","DirtCoreBox","Dirt110Percent","DirtRx","DirtClimb","DirtCopilotPack","all_tiles","gt_tiles","dirt_tiles","tiles","contains","is_expansion","series","iter","ParseEditionError","Unknown","Series","Gt","Dirt","editions","iter","ParseSeriesError","Unknown","hexagon","Coordinate","new","q","r","s","neighbor","rotated_left","rotated_right","to_pixel","from_pixel_rounded","Direction","A","B","C","D","E","F","iter","opposite","rotated_left","rotated_right","to_angle","Point","0","1","x","y","Rect","left","top","width","height","new","right","bottom","center","union","Orientation","pointy","flat","Layout","new","orientation","size","origin","is_pointy","is_flat","hexagon_corners","hexagon_rect","import","import_native","export_native","import_rgt","export_rgt","import_auto","build_file_name","map","PlacedTile","pos","dir","new","id","Map","new","title","set_title","tiles","active_pos","set_active_pos","active_dir","get","insert","append","remove","align_center","rotate_left","rotate_right","tile","TileId","new","num","side","var","base","ConnectionHint","Straight","Left","Right","ParseHintError","Unknown","Connection","None","Straight","Left","Right","Junction","target","Edge","None","Straight","SkewLeft","SkewRight","lanes","Terrain","None","Asphalt","Gravel","Snow","danger_level","surface","eq_surface","ParseTerrainError","UnknownSurface","InvalidDangerLevel","TileInfo","base_id","full_id","iter","get","count","terrain","connection","connection_target","edge","series","main","__wasm_bindgen_generated_main","warn","log","info","debug","tile","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","default","default","default","default","default","default","default","default","default","cmp","cmp","cmp","cmp","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","sub","sub","sub","add","add","add","hash","try_from","try_from","try_from","from_str","from_str","from_str","from_str","from_str","serialize","serialize","serialize","serialize","serialize","serialize","serialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize"],"q":["rekee","rekee::edition","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee","rekee::hexagon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee","rekee::import","","","","","","rekee","rekee::map","","","","","","","","","","","","","","","","","","","","rekee","rekee::tile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee","","","","","","","rekee::edition","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee::hexagon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee::map","","","","","","","","","","","","","","","","","","rekee::tile","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rekee::hexagon","","","","","rekee::edition","","rekee::hexagon","","","","","","rekee::map","","rekee::tile","","","","","rekee::hexagon","","","","rekee::map","rekee::tile","","","","","rekee::edition","","rekee::hexagon","rekee::tile","rekee::edition","","","","","","rekee::hexagon","","","","","","","rekee::map","rekee::tile","","","","","","","","","","","","","","rekee::edition","","rekee::hexagon","rekee::tile","rekee::edition","","","","rekee::hexagon","","","","","","rekee::map","","rekee::tile","","","","","","","","rekee::edition","","","","rekee::hexagon","","rekee::tile","","","","","","rekee::hexagon","","","","","","rekee::tile","rekee::edition","rekee::tile","","rekee::edition","","rekee::tile","","","rekee::edition","rekee::hexagon","","rekee::map","","rekee::tile","","rekee::edition","rekee::hexagon","","rekee::map","","rekee::tile",""],"d":["Set of tiles that belong to the same game edition (core …","Rallyman game edition (core box or one of the expansions).","Rallyman: GT core box","Championship expansion for Rallyman: GT","World Tour expansion for Rallyman: GT","Team Challenge expansion for Rallyman: GT","Adrenaline Pack expansion for Rallyman: GT","Rallyman: DIRT core box","110% expansion for Rallyman: DIRT","RX expansion for Rallyman: DIRT","Climb expansion for Rallyman: DIRT","Copilot Pack expansion for Rallyman: DIRT","Returns all the tiles of the game joined into a sorted …","Returns tiles part of Rallyman: GT game editions joined …","Returns tiles part of Rallyman: DIRT game editions joined …","Returns the tiles of a specific game edition.","Check whether a specific game edition contains the given …","Check whether the edition is a stand-alone game, or an …","Game series that the edition belongs to.","Iterator over all game editions.","","","Rallyman game series (GT or DIRT).","Rallyman: GT","Rallyman: DIRT","Iterator over the editions of the game series.","Iterator over all game series.","","","Types and methods for working with a hexagon grid.","Coordinate within a hexagon grid.","Creates a new grid coordinate from positions on <code>q</code> and <code>r</code> …","Coordinate position on <code>q</code> axis.","Coordinate position on <code>r</code> axis.","Coordinate position on <code>s</code> axis.","Get adjacent grid coordinate based on the given direction.","Get coordinate rotated left (counter-clockwise) by 60° …","Get coordinate rotated right (clockwise) by 60° around …","Convert this hexagon grid coordinate into x/y pixel …","Convert x/y pixel positions back into a hexagon grid …","Direction within a hexagon grid.","Direction of the positive <code>q</code> axis.","Direction of the positive <code>r</code> axis.","Direction of the positive <code>s</code> axis.","Direction of the negative <code>q</code> axis.","Direction of the negative <code>r</code> axis.","Direction of the negative <code>s</code> axis.","Iterator over all six directions.","Get opposite direction (point reflection).","Get direction rotated left (counter-clockwise).","Get direction rotated right (clockwise).","Convert this hexagon grid direction into an angle in …","Position within a grid of rectangular pixels.","","","Position on the <code>x</code> axis.","Position on the <code>y</code> axis.","Rectangle area within a grid of rectangular pixels. It …","","","","","Creates a new rectangle from the <code>left</code>, <code>top</code>, <code>width</code> and …","Right position of the rectangle.","Bottom position of the rectangle.","Center point of the rectangle.","Calculates the union of two rectangles, the smallest …","Hexagon orientation coefficients.","Pointy topped orientation, hexagons are aligned in …","Flat topped orientation, hexagons are aligned in vertical …","Coefficients for converting between hexagonal grid …","Creates a new grid layout, consisting of hexagon …","Returns a reference to the grid orientation parameters.","Returns the hexagon size of this grid layout.","Returns the grid origin point.","Returns whether the hexagon orientation is “pointy top…","Returns whether the hexagon orientation is “flat top” …","Calculates the corners of a hexagon with the given …","Calculates the rectangular box of a hexagon with the …","Import and export of map data.","Import map data in native Rekee format.","Export map data in native Rekee format.","Import map data in RGT format.","Export map data in RGT format.","Import map data with format auto-detection.","Helper function to generate a valid filename from a (map …","Map of tiles within a hexagon grid.","Single tile that is part of the map. A placed tile …","","","Creates a new tile with identifier, coordinates, and …","Tile identifier.","Map for storing track tiles.","Creates a new and empty map.","Map title.","Updates the map title.","List of all tiles placed on the map.","Active position for the next tile <code>append</code> action. Returns …","Update position for the next tile <code>append</code> action.","Active direction for the next tile <code>append</code> action.","Returns tile at the given map position, if existing.","Insert a new tile using the specified position and …","Append a new tile to the map using the active position. …","Remove tile at the given position.","Re-align all tiles around the map center.","Rotate all tile positions to the left (counter-clockwise).","Rotate all tile positions to the right (clockwise).","Tile identifier and characteristics.","Identifier of a game tile.","Creates a new tile identifier from catalog number, tile …","Tile catalog number.","Tile side (1 => front / a, 2 => back / b).","Graphical tile variant.","Returns the “base” identifier of a game tile. This is …","Tile connection hint. Used to describe the orientation of …","","","","","","Internal tile connection information. Describes how a …","","","","","","","External tile edge information. Describes how the track …","","","","","Lane count of the tile edge.","Tile terrain information. Describes the track surface of …","","","","","Danger level of a tile.","Surface of a tile.","Compares the surface of two tiles and ignores the danger …","","","","Information about tile characteristics like graphical …","Base identifier of the corresponding game tile.","Full identifier of the corresponding game tile. If the …","Returns an interator over all tiles in the internal list.","Lookup tile information by tile identifier. The …","Number of graphical variants that are available for a …","Terrain information for a tile.","Connection information for one of the six directions of a …","Connection target direction for one of the six directions …","Edge informantion for one of the six directions of a tile.","Series information for a tile.","","","Prints a warning message to the log output.","Prints a generic message to the log output.","Prints an info message to the log output.","Prints a debug message to the log output.","Creates a new tile identifieri":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,0,3,3,3,3,0,4,0,0,5,5,5,5,5,5,5,5,5,0,6,6,6,6,6,6,6,6,6,6,6,0,7,7,7,7,0,8,8,8,8,8,8,8,8,8,0,9,9,0,10,10,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,0,13,13,13,13,13,0,14,14,14,0,15,0,16,16,16,16,16,16,0,17,17,17,17,17,0,18,18,18,18,18,18,18,0,19,19,0,20,20,20,20,20,20,20,20,20,20,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,5,6,6,6,7,1,3,5,6,7,8,9,10,11,12,13,14,16,17,18,5,7,8,10,12,13,16,17,18,20,1,3,5,13,1,2,2,3,4,4,5,5,6,7,7,8,8,11,13,13,14,15,15,16,16,16,17,17,18,18,19,19,1,3,5,13,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,1,2,3,4,5,6,13,14,15,18,19,20,5,6,7,5,6,7,13,1,13,18,1,3,13,14,18,1,5,6,11,12,13,18,1,5,6,11,12,13,18],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[],[["vec",3],["tileid",3]]],[[],[["vec",3],["tileid",3]]],[[],[["vec",3],["tileid",3]]],[[],[["vec",3],["tileid",3]]],[[["tileid",3]],["bool",15]],[[],["bool",15]],[[],["series",4]],[[],["iter",3]],null,null,null,null,null,[[],[["edition",4],["iter",3]]],[[],["iter",3]],null,null,null,null,[[["i32",15]]],[[],["i32",15]],[[],["i32",15]],[[],["i32",15]],[[]],[[]],[[]],[[["layout",3]],["point",3]],[[["layout",3],["point",3]]],null,null,null,null,null,null,null,[[],["iter",3]],[[]],[[]],[[]],[[["layout",3]],["f32",15]],null,null,null,[[],["f32",15]],[[],["f32",15]],null,null,null,null,null,[[["f32",15]]],[[],["f32",15]],[[],["f32",15]],[[],["point",3]],[[["rect",3]],["rect",3]],null,[[]],[[]],null,[[["orientation",3],["point",3]]],[[],["orientation",3]],[[],["point",3]],[[],["point",3]],[[],["bool",15]],[[],["bool",15]],[[["coordinate",3]]],[[["coordinate",3]],["rect",3]],null,[[["str",15]],[["map",3],["result",6]]],[[["map",3]],[["result",6],["string",3]]],[[["str",15]],[["map",3],["result",6]]],[[["map",3]],[["result",6],["string",3]]],[[["str",15]],[["map",3],["result",6]]],[[["str",15]],["string",3]],null,null,null,null,[[["tileid",3],["direction",4],["coordinate",3]]],[[],["tileid",3]],null,[[]],[[],["str",15]],[[["str",15]]],[[]],[[],[["coordinate",3],["option",4]]],[[["coordinate",3]]],[[],["direction",4]],[[["coordinate",3]],[["placedtile",3],["option",4]]],[[["tileid",3],["direction",4],["coordinate",3]]],[[["connectionhint",4],["coordinate",3],["option",4],["tileid",3],["option",4]],["bool",15]],[[["coordinate",3]]],[[]],[[]],[[]],null,null,[[["u16",15],["u8",15]]],[[],["u16",15]],[[],["u8",15]],[[],["u8",15]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[["direction",4]],[["option",4],["direction",4]]],null,null,null,null,null,[[],["u8",15]],null,null,null,null,null,[[],["u8",15]],[[],["terrain",4]],[[["terrain",4]],["bool",15]],null,null,null,null,[[],["tileid",3]],[[],["tileid",3]],[[],["iter",3]],[[["tileid",3]],["option",4]],[[],["usize",15]],[[],["terrain",4]],[[["direction",4]],["connection",4]],[[["direction",4]],[["option",4],["direction",4]]],[[["direction",4]],["edge",4]],[[],["series",4]],[[],[["result",4],["jsvalue",3]]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["coordinate",3]],[[["u8",15]],["direction",4]],[[["i8",15]],["direction",4]],[[["i32",15]],["direction",4]],[[],["point",3]],[[],["edition",4]],[[],["series",4]],[[],["coordinate",3]],[[],["direction",4]],[[],["point",3]],[[],["rect",3]],[[],["orientation",3]],[[],["layout",3]],[[],["placedtile",3]],[[],["map",3]],[[],["tileid",3]],[[],["connectionhint",4]],[[],["connection",4]],[[],["edge",4]],[[],["terrain",4]],[[],["coordinate",3]],[[],["point",3]],[[],["rect",3]],[[]],[[]],[[],["tileid",3]],[[]],[[]],[[]],[[],["tileinfo",3]],[[["edition",4]],["ordering",4]],[[["series",4]],["ordering",4]],[[["coordinate",3]],["ordering",4]],[[["tileid",3]],["ordering",4]],[[["edition",4]],["bool",15]],[[["parseeditionerror",4]],["bool",15]],[[["parseeditionerror",4]],["bool",15]],[[["series",4]],["bool",15]],[[["parseserieserror",4]],["bool",15]],[[["parseserieserror",4]],["bool",15]],[[["coordinate",3]],["bool",15]],[[["coordinate",3]],["bool",15]],[[["direction",4]],["bool",15]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["rect",3]],["bool",15]],[[["placedtile",3]],["bool",15]],[[["tileid",3]],["bool",15]],[[["tileid",3]],["bool",15]],[[["connectionhint",4]],["bool",15]],[[["parsehinterror",4]],["bool",15]],[[["parsehinterror",4]],["bool",15]],[[["connection",4]],["bool",15]],[[["connection",4]],["bool",15]],[[["connectionhint",4]],["bool",15]],[[["edge",4]],["bool",15]],[[["edge",4]],["bool",15]],[[["terrain",4]],["bool",15]],[[["terrain",4]],["bool",15]],[[["parseterrainerror",4]],["bool",15]],[[["parseterrainerror",4]],["bool",15]],[[["edition",4]],[["ordering",4],["option",4]]],[[["series",4]],[["ordering",4],["option",4]]],[[["coordinate",3]],[["ordering",4],["option",4]]],[[["tileid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["coordinate",3]],["coordinate",3]],[[["direction",4]],["direction",4]],[[["point",3]],["point",3]],[[["coordinate",3]],["coordinate",3]],[[["direction",4]],["direction",4]],[[["point",3]],["point",3]],[[]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["placedtile",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]]],"p":[[4,"Edition"],[4,"ParseEditionError"],[4,"Series"],[4,"ParseSeriesError"],[3,"Coordinate"],[4,"Direction"],[3,"Point"],[3,"Rect"],[3,"Orientation"],[3,"Layout"],[3,"PlacedTile"],[3,"Map"],[3,"TileId"],[4,"ConnectionHint"],[4,"ParseHintError"],[4,"Connection"],[4,"Edge"],[4,"Terrain"],[4,"ParseTerrainError"],[3,"TileInfo"]]}\
}');
initSearch(searchIndex);